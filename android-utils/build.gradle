apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

android {
	compileSdkVersion 28
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	defaultConfig {
		minSdkVersion 21
		targetSdkVersion 28

		versionCode 1
		versionName = "$version"
		// append version to android build-artifacts:
		android.libraryVariants.all { outputs.all {
			outputFileName = outputFileName.replace("$archivesBaseName", "$archivesBaseName-$version") }
		}
	}

	buildTypes {
		release {
			minifyEnabled false

			// strip "-release"-qualifier from artifact file-names, because release is the default:
			android.libraryVariants.matching { variant -> variant.name == "release" }.all { outputs.all {
				outputFileName = outputFileName.replace("-release", "") }
			}
		}
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin/'
		test.java.srcDirs += 'src/test/kotlin/'
	}
}

dependencies {
	api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

	testImplementation 'junit:junit:4.12'
	testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task kdocJar(type: Jar, dependsOn: dokka) {
	from "$buildDir/dokka"
	classifier = 'kdoc'
	archiveName = "${project.name}-${version}-${classifier}.jar"
}

publishing {
	publications {
		maven(MavenPublication) {
			pom.withXml {
				asNode().appendNode('name', 'android-utils')
				asNode().appendNode('description', 'A collection of utility-functions for Android apps.')
				asNode().appendNode('licenses').appendNode('license')
						.appendNode('name', 'MIT').parent()
						.appendNode('url', 'https://opensource.org/licenses/MIT').parent()
				asNode().appendNode('scm')
						.appendNode('url', 'https://github.com/christopherfrieler/android-utils').parent()
				asNode().appendNode('developers').appendNode('developer')
						.appendNode('name', 'Christopher Frieler').parent()
				def dependenciesNode = asNode().appendNode('dependencies')
				configurations.api.allDependencies.each {
					def dependencyNode = dependenciesNode.appendNode('dependency')
					dependencyNode.appendNode('groupId', it.group)
					dependencyNode.appendNode('artifactId', it.name)
					dependencyNode.appendNode('version', it.version)
				}
			}

			artifact(bundleRelease)
			artifact(sourcesJar)
			artifact(kdocJar)
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_API_KEY')

	pkg {
		repo = 'android'
		name = project.name
		userOrg = 'christopherfrieler'
		licenses = ['MIT']
		desc = 'Utility-Functions for Android Apps'
		vcsUrl = 'https://github.com/christopherfrieler/android-utils.git'
		githubRepo = 'christopherfrieler/android-utils'

		version {
			name = "$version"
		}
	}
	publish = true

	publications = ['maven']
}
